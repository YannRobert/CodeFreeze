{
  "name": "Codefreeze",
  "tagline": "Deep immutability Java library",
  "body": "# CodeFreeze\r\nDeep immutability Java library\r\n\r\n[![Build Status](https://drone.io/github.com/dtitov/CodeFreeze/status.png)](https://drone.io/github.com/dtitov/CodeFreeze/latest)\r\n\r\n## Features\r\nCodeFreeze library allows you to create immutable versions of POJO beans. The trick is that such immutability is deep:\r\nyou will be not allowed not only to change first-level properties of the bean, but any properties on any level of nesting.\r\n\r\nExample:\r\n\r\n```java\r\nCodeFreeze codeFreeze = new CGLIBCodeFreeze();\r\nUser user = userRepository.getUserById(1); // obtaining some User bean\r\nUser immutableUser = codeFreeze.freeze(user); // creating deep immutable version of User instance\r\nimmutableUser.setName(\"John Smith\"); // this is gonna throw an UnsupportedOperationException\r\nimmutableUser.getAddress().setStreet(\"Broadway\"); // this ALSO is gonna throw an UnsupportedOperationException\r\n```\r\n\r\nSuch behavior can be really useful for security and code-protection purposes in various kinds of cases (e.g. caching).\r\n\r\n## Usage\r\nAdd the repo to your pom.xml:\r\n```xml\r\n<repositories>\r\n    <repository>\r\n        <id>bracer-mvn-repo</id>\r\n        <url>https://raw.github.com/dtitov/CodeFreeze/mvn-repo/</url>\r\n        <snapshots>\r\n            <enabled>true</enabled>\r\n            <updatePolicy>always</updatePolicy>\r\n        </snapshots>\r\n    </repository>\r\n</repositories>\r\n```\r\n\r\nThen add the dependency:\r\n```xml\r\n        <dependency>\r\n            <groupId>com.autsia</groupId>\r\n            <artifactId>codefreeze</artifactId>\r\n            <version>~</version>\r\n        </dependency>\r\n```\r\n---\r\n*Except as otherwise noted, this library is licensed under the Apache License, Version 2.0 (http://www.apache.org/licenses/LICENSE-2.0.html)*",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}